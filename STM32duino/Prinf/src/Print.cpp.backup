#include <stdarg.h>
typedef void (*pfn_outputchar)(char c, void* p);
extern "C"{
int _print_format (pfn_outputchar pfn, void* pvoid, const char *format, va_list ap);
}

static void put_char_to_string (char c, void* p)
{
  char **buf = (char **)p;
  *(*buf)++ = c;
}

static int vsprintf (char *buf, const char *format, va_list ap)
{
  int i;
  i = _print_format (put_char_to_string, &buf, format, ap);
  *buf = 0;
  return i;
}

int Print::printf (const char *format, ...)
{
    va_list arg;
    va_start(arg, format);
    char temp[64];
    char* buffer = temp;
    size_t len = vsprintf(temp, format, arg);
    va_end(arg);
    len = write((const uint8_t*) buffer, len);
    return len;
}
